#include<bits/stdc++.h>
using namespace std;

class node {
    public:
        int data;
        node* left;
        node* right;
        
        node(int data) {
            this->data = data;
            this->left = NULL;
            this->right = NULL;
        }
};

node* createMap(int parent[], int n) {
    map<int, node*> mp;
    
    for(int i = 0; i < n; i++) {
        if(parent[i] == -1) {
            mp[i] = new node(i);
        }  
        mp[i] = new node(i);
    }
    
    cout<<"Created map is :- "<<endl;
    for(const auto root: mp) {
        cout<<root.first<<" -> "<<root.second<<endl;
    }
    
    node* root = NULL;
    for(int i = 0; i < n; i++) {
        
        if(parent[i] == -1) {
            root = mp[i];
        }
        else {
            if(mp[parent[i]]->left == NULL) {
                mp[parent[i]]->left = mp[i];
            }
            else {
                mp[parent[i]]->right = mp[i];
            }
        }
        
    }
    return root;
}

void inOrder(node* root) {
    if(root == NULL) {
        return;
    }
    inOrder(root->left);
    cout<<root->data<<" ";
    inOrder(root->right);
}

int main() {
    
    int parent[] = {-1,0,0,1,1,3,5}, n = 7;
    
    node* root = createMap(parent, n);
    cout<<"Inorder traversal is :- ";
    inOrder(root);
    
    return 0;
}
